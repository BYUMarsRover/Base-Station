package code;

import java.io.IOException;
import java.net.DatagramPacket;
import java.net.DatagramSocket;
import java.net.InetAddress;

public class RelayMain {
	protected final int PORT = 4444;
    protected DatagramSocket socket = null;
    protected CommonData com = null;
    protected InetAddress address = null;
    byte[] buf = new byte[256];
    
    public static void main()
    {
    	try
    	{
	        DatagramPacket packet = new DatagramPacket(buf, buf.length);
	        
    		while(!Thread.interrupted())	// while we haven't been told to stop
	        {
	        	socket.receive(packet);
	        	
	        	com.addRecievedPacket(packet.getData());	// add recieved packet to common data buffer
	        	//System.out.println("Input Thread has recieved packet");
	        }
    	}
    	catch (IOException e)
    	{
    		if (!(e.getMessage().equals("socket closed")))	// we want to ignore socket closed exceptions, we cause this on purpose when the thread is interrupted to force it to stop waiting to receive a packet
    		{
        		System.err.println("Some sort of IO exception in InputThread, Uh oh.");
        		e.printStackTrace();
    		}
        }
    }
}
